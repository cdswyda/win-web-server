
# 新增auth的缓存路径配置
# 语法：proxy_cache_path path [levels=levels] keys_zone=name:size  [inactive=time] [max_size=size]
# path设置缓存数据存放的路径；
# levels设置目录层级，如levels=1:2，表示有两级子目录,第一个目录名取md5值的倒数第一个值，第二个目录名取md5值的第2和3个值。
# keys_zone设置内存zone的名字和大小，如keys_zone=my_zone:10m
# inactive设置缓存多长时间就失效，当硬盘上的缓存数据在该时间段内没有被访问过，就会失效了，该数据就会被删除，默认为10s。
# max_size设置硬盘中最多可以缓存多少数据，当到达该数值时，nginx会删除最少访问的数据。
proxy_cache_path d:\\tools\\nginx\\temp\\auth_zone levels=1:2 keys_zone=auth_zone:64m inactive=1m;

server {
    listen       80;
    listen       443 ssl http2;
    server_name  local.com localhost;
    autoindex on; # 开启目录浏览
    server_tokens off;  # 隐藏版本号

    rewrite_log off; # rewrite_log 是否开启

    http2_push_preload on;

    set $umami_script '<script async defer data-website-id="c461821d-b2ff-44b1-87ae-814191ed7fce" src="https://fe.epoint.com.cn/umami/umami.js"></script>';
    sub_filter '</body>' '${umami_script}</body>';
    sub_filter_last_modified on;

    
    root   D:/server/root/default;

    # set $injected '<script type=text/javascript>window.BWEUM||(BWEUM={});BWEUM.info = {"stand":true,"agentType":"browser","agent":"browsercollector.oneapm.com/static/js/bw-send-416.7.33.js","beaconUrl":"browsercollector.oneapm.com/beacon","licenseKey":"ZbaEM~ZVvz2QbZBF","applicationID":9992715};</script><script type="text/javascript" src="//browsercollector.oneapm.com/static/js/bw-loader-416.7.33.js"></script>';
    # sub_filter '</head>' '${injected}<head>';


    # ssl on;
    # ssl_certificate           server.crt;
    # ssl_certificate_key       server.key;

    ssl_session_cache        shared:SSL:10m;
    ssl_session_timeout      60m;

    ssl_session_tickets      on;


    ssl_certificate D:/server/nginx/key/local.com+5.pem;
    ssl_certificate_key D:/server/nginx/key/local.com+5-key.pem;
    ssl_protocols TLSv1.2 TLSv1.3; #按照这个协议配置
    # ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置
    ssl_prefer_server_ciphers on;

    server_name_in_redirect off;
    port_in_redirect on;
    
    fastcgi_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Origin;
    add_header Access-Control-Allow-Origin *;
    
    # fastcgi_hide_header Content-Type;
    # proxy_hide_header Content-Type;
    # add_header Content-Type *;

    
    fastcgi_hide_header Access-Control-Allow-Headers;
    proxy_hide_header Access-Control-Allow-Headers;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, eptoken, User-Token";

    fastcgi_hide_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Allow-Methods;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    # add_header IP $remote_addr;

    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self'";
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self'";

    #access_log  logs/host.access.log  main;
    if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})") {
        set $year $1;
        set $month $2;
        set $date $3;
    }
    access_log  d:/server/logs/default/$year-$month-$date-access.log  main;
    error_log  d:/server/logs/default/error.log;

    location = /auth {
        proxy_pass http://127.0.0.1:3004/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;

        proxy_cache auth_zone; # 定义缓存区
        proxy_cache_key $cookie_fe_auth_token; #以fe_auth_token这个cookie作为key

        set $nocache 1;
        if ($cookie_fe_auth_token) {
            set $nocache 0;
        }
        proxy_no_cache $nocache; # 不缓存的情况

        proxy_cache_valid 200 1m; # 200 缓存 1分钟
        proxy_cache_valid 401 0; # 401 缓存 0秒
    }
    location @unAuth {
        add_header Set-Cookie "NSREDIRECT=$scheme://$http_host$request_uri;Path=/";
        return 302 http://192.168.118.47:3004/login.html;
    }

    location / {
        # deny all;
        # root   html;
        # index  index.html index.htm;

        index   index.php index.html index.htm;
        absolute_redirect off;

        autoindex_exact_size off; # 关闭详细文件大小统计

        # 静态文件post请求的405的问题
        error_page   405          = $uri;
        # http2_push  /bitnami.css;
        # http2_push  /dashboard/stylesheets/normalize.css;

        if ($uri ~* .*\.(htm|html)$) {
            add_header    Cache-Control  "no-store";
        }
        if ($uri ~* .*\.(ico)$) {
            add_header    Cache-Control  "max-age=300";
        }
        if ($uri ~* .*\.(gif|jpg|jpeg|bmp|png|txt|js|css)$) {
            add_header   Cache-Control  "private,max-age=2592000";
        }
        if ($uri ~* "(cssboot|jsboot|boot)\.js$") {
            add_header Cache-Control "no-cahce";
        }

        add_header Cache-Control "max-age=36000";
    }

    # 统一端口映射
    # 将 /p端口号 统一转发到 127.0.0.1:端口号 上
    location ~ ^/p(\d+) {
        # proxy_bind $remote_addr  transparent;

        set $targetPort $1;
        rewrite ^/p(\d+)/(.*)$ /$2 break; 
        proxy_pass   http://127.0.0.1:$targetPort;
        
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

    
    
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_INFO  $fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;
        include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}